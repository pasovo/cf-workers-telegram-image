name: Deploy to Cloudflare Workers

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - run: pnpm install && pnpm build

      - name: Get D1 database id and generate wrangler.toml
        id: d1
        run: |
          DB_NAME="${{ secrets.D1_DATABASE_NAME }}"
          DB_ID=$(npx wrangler d1 list --json | jq -r ".[] | select(.name==\"$DB_NAME\") | .uuid")
          cat <<EOF | sed 's/^ *//' > wrangler.toml
            name = "cf-workers-telegram-image"
            main = "./src/worker/index.ts"
            compatibility_date = "2025-04-01"
            compatibility_flags = ["nodejs_compat"]

            [observability]
            enabled = true

            upload_source_maps = true

            [[d1_databases]]
            binding = "DB"
            database_name = "$DB_NAME"
            database_id = "$DB_ID"
          EOF
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Deploy empty Worker (first time only)
        run: npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Set all secrets
        run: |
          echo "${{ secrets.TG_BOT_TOKEN }}" | npx wrangler secret put TG_BOT_TOKEN
          echo "${{ secrets.TG_CHAT_ID }}" | npx wrangler secret put TG_CHAT_ID
          echo "${{ secrets.ADMIN_USER }}" | npx wrangler secret put ADMIN_USER
          echo "${{ secrets.ADMIN_PASS }}" | npx wrangler secret put ADMIN_PASS
          if [ -n "${{ secrets.SHORTLINK_DOMAIN }}" ]; then
            echo "${{ secrets.SHORTLINK_DOMAIN }}" | npx wrangler secret put SHORTLINK_DOMAIN
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Publish to Cloudflare Workers
        run: npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }} 